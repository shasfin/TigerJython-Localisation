#
# (c) 2019-, Tobias Kohn
             Alexandra Maximova
#
# http://jython.tobiaskohn.ch/
#
# LAST CHANGE: MAY-23-2019
#
language.name = "Русский"

# Menu items
menu.file = "Файл"
menu.edit = "Правка"
menu.run = "Выполнить"
menu.tools = "Инструменты"
menu.help = "Справка"

# Actions
new.caption = "Создать"
new.tooltip = "Создать программу"
new.shortcut = "command N"
open.caption = "Открыть..."
open.tooltip = "Открыть"
open.shortcut = "command O"
save.caption = "Сохранить"
save.tooltip = "Сохранить"
save.shortcut = "command S"
saveas.caption = "Сохранить как..."
saveas.tooltip = "Сохранить под другим именем."
saveall.caption = "Сохранить всё"
saveall.tooltip = "Сохранить все открытые документы."
reopen.caption = "Открыть недавние"
close.caption = "Закрыть"
close.tooltip = "Закрыть текущий документ."
close.shortcut = "command W"
closeall.caption = "Закрыть всё"
closeall.tooltip = "Закрыть все открытые документы."
print.caption = "Печать..."
print.tooltip = "Печать текущего документа."
preferences.caption = "Параметры..."
quit.caption = "Завершить"
quit.tooltip = "Завершить работу."

undo.caption = "Отменить"
undo.shortcut = "command Z"
redo.caption = "Повторить"
redo.shortcut = "command Y"
cut.caption = "Вырезать"
cut.shortcut = "command X"
copy.caption = "Копировать"
copy.shortcut = "command C"
copyasrtf.caption = "Копировать с форматом"
copyasrtf.shortcut = "command shift C"
paste.caption = "Вставить"
paste.shortcut = "command V"
clear.caption = "Очистить"
clearall.caption = "Очистить всё"
selectall.caption = "Выделить всё"
selectall.shortcut = "command A"
copyinputtext.caption = "Копировать в редактор"
find.caption = "Поиск"
find.shortcut = "command F"
replace.caption = "Поиск и замена..."
replace.shortcut = "command H"
togglecomment.caption = "Закомментировать/Раскомментировать"
togglecomment.shortcut = "control Q"

run.caption = "Выполнить"
run.tooltip = "Выполнить текущую программу."
run.shortcut = "F5"
resume.caption = "Продолжить"
resume.tooltip = "Возобновить выполнение прерванной программы."
resume.shortcut = "F5"
runselected.caption = "Выполнить выделенное"
runselected.shortcut = "shift F5"
singlestep.caption = "Выполнить шаг"
singlestep.shortcut = "F6"
# Execute a single line and regard functions as atomic,
# i.e. do not jump into the function:
stepover.caption = "Перешагнуть"
stepover.shortcut = "shift F6"
pause.caption = "Пауза"
abort.caption = "Остановить"
reset.caption = "Сбросить"
togglebreakpoint.caption = "Поставить/убрать контрольную точку"
togglebreakpoint.shortcut = "control shift B"
showdebugger.caption = "Включить/выключить отладчик"
showconsole.caption = "Показать консоль"
showconsole.tooltip = "Открыть интерактивную консоль в отдельном окне."
showconsole.shortcut = "command T"
define.caption = "Запомнить функцию"
define.tooltip = "Запомнить выделенную команду или функцию."
showfunctions.caption = "Управление моими функциями"
keyboardinterrupt.caption = "Прерывание клавиатуры"

remoteterminal.caption = "Удалённый терминал"
remoteterminal.shortcut = "shift command T"
downloadtotarget.caption = "Скачать/Выполнить"
downloadtotarget.shortcut = "shift F7"
executeontarget.caption = "Выполнить на целевой платформе"
executeontarget.enabled = false
downloadmoduletotarget.caption = "Скачать модуль"
terminatepythonontarget.caption = "Завершить Python на целевой платформе"
shutdowntarget.caption = "Выключить целевую платформу"
restarttarget.caption = "Перезагрузить целевую платформу"
flashtarget.caption = "Перезаписать целевую платформу"

insertrandomnumbers.caption = "Вставить случайные числа..."
insertprimenumber.caption = "Вставить простые числа..."

apludocumentation.caption = "Документация APLU..."

help.caption = "Справка"
help.enabled = true
update.caption = "Обновить/Главная страница"
about.caption = "О " + app.name + "..."

# Window captions
console.caption = "Консоль"
output.caption = "Вывод"
info.caption = "Информация"
problems.caption = "Уведомления"

quickfind.caption = "Поиск"

# Debugger Panel
debug.runspeed = "Скорость выполнения"
debug.slow = "Медленно"
debug.fast = "Быстро"

# Messages and Queries
message.cannotsaveduplicate = "Файл '%s' уже открыт и не может быть перезаписан.\n"+
	"Пожалуйста, закройте его или выберите другое имя."
message.filenotfound = "Файл '%s' не найден."
message.printed = "Распечатано %d страниц."
message.updateavailable = "Обновление: доступна новая версия (%s) " + app.name + "."
queries.overwrite = "Файл '%s' уже существует.\nХотите его перезаписать?"
queries.savebeforeclose = "Файл '%s' изменён.\nСохранить перед закрытием?"
queries.abort = "Программа ещё выполняется.\nХотите её остановить?"
queries.reload = "Файл '%s' был изменён в другой программе.\nХотите загрузить его с диска?"
dialogs.pythonfiles = "Файлы Python"

# Preferences
prefs {
	.title = "Параметры"
    .ok = "OK"
	.ok.tooltip = "Сохранить изменения и выйти."
	.cancel = "Отмена"
	.cancel.tooltip = "Не сохранять изменения и выйти."

    .general = "Общее"
	.general.tooltip = "Изменить общий вид."
    .fontsize = "Размер шрифта"
    .tabwidth = "Ширина табуляции"
    .autoindent = "Indent lines automatically."
    .autoindent.tooltip = "Indent lines after keywords such as 'def' or 'if' automatically."
    .autosave = "Сохранять файлы перед выполнением."
    .autosave.tooltip = "Automatically save the current program before running it."
	.checkupdate = "Check for updates."
	.checkupdate.tooltip = "Automatically check if there is an update available for download."
	.highlightline = "Выделить текущую строку."
	.scaletoscreen = "Scale for high screen resolutions."
	.hideexeccode = "Hide main window during execution."
    .language = "Язык"
    .lookandfeel = "Look and feel"

    .advanced = "Дополнительные настройки"
	.advanced.tooltip = "Изменить дополнительные настройки."
	.docmode.multi = "Edit documents using tabs."
	.docmode.multi.tooltip = "Allows to open and edit several documents at a time."
	.docmode.single = "Edit one document only."
	.docmode.single.tooltip = "Open and edit only one document at a time."
	.docmode.newinstance = "Open document in a new window."
	.docmode.newinstance.tooltip = "Open each document in a new version of " + app.name + "."
	.autobackup = "Backup open files automatically."
	.autobackup.tooltip = "TigerJython saves a copy of all open Python-files in the 'tjbackup'-folder."
    .showmenu = "Show the mainmenu."
    .showmenu.tooltip = "Display the menu at the top of the window."
	.closedocwarning = "Warning! All documents will be immediately closed."
	.displayerrorframe = "In case of an error, load the last frame into the debugger."
	.jython.usagestats = "Print usage statistics"
	.jython.usagestats.tooltip = "Print the time needed for the execution and the available memory at the end of the program."
    .jython.autoaddjars = "Add jar-files in 'Lib' automatically to the path."
    .jython.autoaddjars.tooltip = "Look for jar-files in the Lib-directory and add them to the python-path."
	.popuperrormsg = "Show errors directly inside the editor."
	.popuperrormsg.tooltip = "Error messages will displayed with a small pop-up window."
	.jvm.disabledirectdraw = "Disable Direct3D-drawing."
	.jvm.disabledirectdraw.tooltip = "On some computers, Java's Direct3D does not work properly and needs to be disabled."
    .jython.exterrors = "Use the extended error-detection."
    .jython.exterrors.tooltip = "When active, problematic or useless Python expressions are prohibited."
	.jython.strictchecking = "Strict error-detection."
	.jython.strictchecking.tooltip = "Provide additional error detection of problematic statements and expressions."
	.jython.flatfunctions = "Prohibit nested function definitions."
    .jython.olddivision = "Use the old division of Python 2."
    .jython.olddivision.tooltip = "When active, / and // are handled as in Python 2. This option requires " + 
                                    app.name + " to be restarted."
    .jython.evalinput = "Evaluate input as in Python 2."
    .jython.evalinput.tooltip = "When active, the input function is 'eval(raw_input())'."
    .jython.repeatloop = "Allow 'repeat'-loops."
    .jython.repeatloop.tooltip = "Loops with 'repeat' are not standard-Python and can thus be deactivated here."
	.jython.sagepowerop = "Use `^' for power and `^^' for xor."
	.jython.sagepowerop.tooltip = "When this option is active, the operator `^' stands for `power' and `^^' is used for `xor'."
	.showlonglists = "Display long lists completely."
	.showlonglists.tooltip = "Without this option, long lists are shortened for display in the console."
	.disabledebugbeans = "Disable beans-properties in the debugger."
	.disabledebugbeans.tooltip = "Some Java-beans-properties might cause problems in the debugger. Disable them if necessary."
	.feedback.sendhttp = "Send us an automated feedback about error messages."
	.feedback.sendhttp.tooltip = "Help us improve TigerJython by sending us automated and anyomized feedback about how good our error messages are."
	.importsite = "Import site-packages at startup."
	.jython.protectfunctions = "Protect builtin-functions."
	.ximport = "Preprocess imports for extended syntax support."
	
	.library = "Library"
    .aplu.turtle.winsize = "Turtle's window size"
	.aplu.turtle.winsize.default = "Default"
	.aplu.turtle.winsize.default.tooltip = "Use the libraries' default."
	.aplu.turtle.winsize.auto = "Auto"
	.aplu.turtle.winsize.auto.tooltip = "Make the window as big as possible."
	.aplu.turtle.winsize.manually = "Set size to"
	.aplu.turtle.winsize.manually.tooltip = "Set the size manually to (width, height)."
	.aplu.turtle.pencolor = "Pen color"
	.aplu.turtle.color = "Turtle color"
	.aplu.turtle.backgroundcolor = "Background color"
	.aplu.gturtle.hideonstart = "Hide turtle as default"
	.aplu.gpanel.winsize = "GPanel's window size"
	.aplu.gpanel.winsize.default = "Default"
	.aplu.gpanel.winsize.default.tooltip = "Use the libraries' default."
	.aplu.gpanel.winsize.manually = "Set size to"
	.aplu.gpanel.winsize.manually.tooltip = "Set the size manually to (width, height)."
    .aplu.gpanel.multiwindow = "Show several windows"
	.aplu.ev3.enable = "Enable EV3-Download"
	.aplu.ev3.exec = "Run after download"
	.aplu.ev3.exec.tooltip = "Execute the script on the target after the download."
	.aplu.ev3.ipaddress = "IP Address"
	.aplu.ev3.ipaddress.tooltip = "Enter the IP Address/COM-PORT of your target."
	.aplu.ev3.robotselect = "Choose robot"
	.aplu.ev3.robotnone = "No robot"
	.aplu.ev3.robotev3 = "Lego EV3"
	.aplu.ev3.robotrpi = "Raspberry Pi"
	.aplu.ev3.microbit = "micro:bit/Calliope"
	
	.syntax = "Syntax"
	.syntax.background = "Background"
	.syntax.default = "Normal font"
	.syntax.builtin = "Builtin functions"
	.syntax.comment = "Comments"
	.syntax.const = "Builtin values"
	.syntax.identifier = "Identifiers"
	.syntax.keyword = "Keywords"
	.syntax.number = "Numbers"
	.syntax.operator = "Operators"
	.syntax.separator = "Separators"
	.syntax.string = "Strings"
	.syntax.type = "Datatypes"
	.syntax.curline = "Current line"
	.gutter.background = "Linenumbers: Background"
	.gutter.textcolor = "Linenumbers: Text"
	.output.background = "Output: Background"
	.output.textcolor = "Output: Text"
	.output.errorcolor = "Output: Errormessages"
	.gutter.prompt = "Console: Prompt"
	.output.input = "Console: Input background"
	.syntax.reset = "Reset to defaults"
}

# User defined functions
userdef.delete = "Delete"
userdef.emptylist = "You have no commands or functions defined!"
userdef.confirmdelete = "Do you really want to delete '%s'?"

# Find Dialog
find {
    .title = "Find and Replace..."
    .findbutton = "Find"
    .replacebutton = "Replace"
    .replaceallbutton = "Replace All"
    .cancel = "Cancel"
    .findwhat = "Find what"
    .replacewith = "Replace with"
    .wholeword = "Whole word"
    .matchcase = "Match case"
    .direction = "Direction"
    .up = "Up"
    .down = "Down"
}

# Interaction of user programs
input.floatprompt = "Enter a number:"
input.intprompt = "Enter an integer:"
input.nofloaterror = "This is not a valid number."
input.nointerror = "This is not a valid integer."

